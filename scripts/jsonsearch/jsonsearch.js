// Caption: JSON model searcher
// Authors: Michael Horvath
// Version: 0.1.0
// Created: 2021/04/24
// Updated: 2021/04/24
// 
// This program searches a JSON file generated by mpd2json or jsonflat for the 
// search terms specified in a second JSON file, and outputs the results to a 
// third JSON file. Note that all three JSON files have different formats and 
// structures. This tool returns both partial and complete matches. The search 
// terms may be strings or regular expressions. The output file name is the 
// same as the input file name plus the ".result.json" extension. The JSON file 
// containing the search terms must have the same file name as the input file 
// plus the ".search.json" extension.
// 
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

var fso;
var searchInArray = [];
var searchForArray = [];
var searchResultArray = [];
var usageText = 
'Invalid usage.\n\n'+
'Example:\n'+
'\tcscript jsonsearch.js [JSON input path]\n'+
'\t [JSON input path] the JSON file to search in.\n';

// only continue if the script is run via Windows Scripting Host
if (typeof(WScript) != 'undefined')
{
	var progArgs = WScript.Arguments;
	var argsNum = progArgs.length;
	var extensionA = /\.[jJ][sS][oO][nN]$/;
	var searchInPath = progArgs(0);
	var searchForPath = searchInPath + '.search.json';
	var failCode = 0;	// needs to always be a power of 2
	if (argsNum != 1)
	{
		failCode += 1;
	}
	if (!extensionA.test(searchInPath))
	{
		failCode += 2;
	}
	if (failCode == 0)
	{
		ProcessFile(searchInPath, searchForPath);
	}
	else
	{
		WScript.Echo(usageText + '\nFailure code: ' + failCode);
	}
}

function ProcessFile(searchInPath, searchForPath)
{
	var startDate = new Date();
	WScript.Echo('Processing files: "' + searchInPath + '" and "' + searchForPath + '".');

	// read the input files and store their contents in two arrays
	WScript.Echo('Reading input.');
	fso = new ActiveXObject('Scripting.FileSystemObject');

	var searchInFileObject = fso.OpenTextFile(searchInPath, 1);
	var searchInCodeString = searchInFileObject.ReadAll();
	searchInFileObject.Close();
	searchInArray = eval('(' + searchInCodeString + ')');
	searchInArrayLength = searchInArray.length;

	var searchForFileObject = fso.OpenTextFile(searchForPath, 1);
	var searchForCodeString = searchForFileObject.ReadAll();
	searchForFileObject.Close();
	searchForArray = eval('(' + searchForCodeString + ')');
	searchForArrayLength = searchForArray.length;

	// search for the objects
	WScript.Echo('Walking the tree.');
	for (var j = 0; j < searchForArrayLength; j++)
	{
		var searchForName = searchForArray[j];
		WScript.Echo('Searching for: ' + searchForName);
		for (var i = 0; i < searchInArrayLength; i++)
		{
			var searchInFile = searchInArray[i];
			var searchInName = searchInFile.fileName;
			WScript.Echo('  Searching in: ' + searchInName);
			if (searchInName.search(searchForName) > -1)
			{
				searchResultArray.push(searchInFile);
			}
		}
	}
	searchResultArrayLength = searchResultArray.length;

	// write a copy of the output
	WScript.Echo('Writing output.');
	var OutputFileString = ObjectToString(searchResultArray);
	var OutputFilePath = searchInPath + '.result.json';
	var OutputFileObject = fso.OpenTextFile(OutputFilePath, 2, 1, 0);
	OutputFileObject.Write(OutputFileString);
	OutputFileObject.Close();

	// finishing up
	WScript.Echo('Finishing up.');
	WScript.Echo(searchForArrayLength + ' objects searched for.');
	WScript.Echo(searchInArrayLength + ' objects searched in.');
	WScript.Echo(searchResultArrayLength + ' matches found.');
	var endDate = new Date();
	WScript.Echo(((endDate - startDate)/1000) + ' seconds.');
}

// https://stackoverflow.com/questions/957537/how-can-i-display-a-javascript-object
// cc by-sa 4.0
// with modifications, no indentation sadly
// would prefer it if quotes were added to string indices only if the string indices contained whitespace characters
function ObjectToString(o)
{
	if (!o) {return 'null';}
	var k = '';
	var na = typeof(o.length) == 'undefined';
	var str = '';
	for (var p in o)
	{
		if (na) {k = '"' + p + '":';}
		if (typeof o[p] == 'string') {str += k + '"' + o[p].replace(/\\/g,'\\\\').replace(/\"/g,'\\"') + '",';}
		else if (typeof o[p] == 'object') {str += k + ObjectToString(o[p]) + ',';}
		else {str += k + o[p] + ',';}
	}
	if (na) {return '{' + str.slice(0, -1) + '}';}
	else {return '[' + str.slice(0, -1) + ']';}
}
